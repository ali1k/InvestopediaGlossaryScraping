# zk-SNARK Definition
@prefix invp: <https://www.investopedia.com/vocab/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .

<https://www.investopedia.com/terms/z/zksnark.asp> a invp:Term ;
    rdfs:label "zk-SNARK Definition" ;
    schema:url <https://www.investopedia.com/terms/z/zksnark.asp> ;
    invp:description """
Zk-SNARK is an acronym that stands for “Zero-Knowledge Succinct Non-Interactive Argument of Knowledge.” A zk-SNARK is a cryptographic proof that allows one party to prove it possesses certain information without revealing that information. This proof is made possible using a secret key created before the transaction takes place. It is used as part of the protocol for the cryptocurrency, <a data-component="link" data-ordinal="1" data-source="inlineLink" data-type="internalLink" href="https://www.investopedia.com/terms/z/zcash.asp" rel="noopener noreferrer">Zcash</a>.

For many original members of the cryptocurrency community—primarily the Bitcoin community—privacy was an assumed aim and feature of <a data-component="link" data-ordinal="1" data-source="inlineLink" data-type="internalLink" href="https://www.investopedia.com/terms/c/cryptocurrency.asp" rel="noopener noreferrer">cryptocurrencies</a>. However, privacy was always a second-order concern, given cryptocurrency's need to create a "trustless" system of guaranteeing the integrity of electronic currency and digital transactions.

In the early 2010s, <a data-component="link" data-ordinal="1" data-source="inlineLink" data-type="internalLink" href="https://www.investopedia.com/terms/b/bitcoin.asp" rel="noopener noreferrer">Bitcoin</a> users sometimes assumed that their transactions were anonymous because their offline identities weren't associated with users' public keys. But through the end of the decade, coordinated efforts by data scientists, hackers, and law enforcement proved that it is not only possible but <a data-component="link" data-ordinal="2" data-source="inlineLink" data-type="externalLink" href="https://www.nature.com/articles/s41467-019-10933-3" rel="noopener noreferrer">relatively easy to re-identify people</a> who had given pseudonymous data to multiple sources.

Because of the perceived lack of privacy of some of the original cryptocurrencies like Bitcoin, developers started working on privacy-focused coins. The <a data-component="link" data-ordinal="1" data-source="inlineLink" data-type="internalLink" href="https://www.investopedia.com/news/edward-snowden-comes-out-favor-zcash/" rel="noopener noreferrer">most prominent</a> of these was <a data-component="link" data-ordinal="2" data-source="inlineLink" data-type="internalLink" href="https://www.investopedia.com/tech/what-zcash/" rel="noopener noreferrer">Zcash</a>, backed by a technology known as zk-SNARKs.

A <a data-component="link" data-ordinal="1" data-source="inlineLink" data-type="externalLink" href="https://z.cash/technology/zksnarks.html" rel="noopener noreferrer nofollow">zk-SNARK</a> ("zero-knowledge succinct non-interactive argument of knowledge") utilizes a concept known as a "zero-knowledge proof." The idea behind these <a data-component="link" data-ordinal="2" data-source="inlineLink" data-type="internalLink" href="https://www.investopedia.com/stock-analysis/021815/worlds-top-ten-news-companies-nws-gci-trco-nyt.aspx" rel="noopener noreferrer">proofs</a> was first developed in the 1980s. Put simply, a zero-knowledge proof is a situation in which each of two parties in a transaction is able to verify to each other that they have a particular set of information, while at the same time not revealing what that information is.

For most other types of proof, at least one of the two parties must have access to all of the information. A traditional proof can be compared to a password used to access an online network. The user submits the password, and the network itself checks the contents of the password to verify that it is correct. In order to do this, the network must also have access to the contents of the password.

A zero-knowledge proof version of this situation would involve the user demonstrating to the network (via mathematical proof) that they have the correct password without actually revealing the password itself. The privacy and security advantages in this situation are clear: If the network does not have the password stored somewhere for verification purposes, the password cannot be stolen.

The mathematical basis of zk-SNARKS is complex. Nonetheless, proofs of this type allow one party to demonstrate not only that a particular bit of information exists, but also that the party in question has awareness of that information. In the case of Zcash, zk-SNARKs can be verified nearly instantly, and the protocol does not require any interaction between the prover and the verifier.

There are, of course, concerns related to zk-SNARKs. For instance, if someone was able to access the private key that was used to create the parameters of the proof protocol, they could create false proofs that nonetheless looked valid to verifiers. This would allow that person to create new tokens of Zcash through a counterfeiting process. In order to prevent this from happening, Zcash was designed in such a way as to make the proving protocols elaborate and spread out over multiple parties.

While the construction of the Zcash proving process was completed in such a way as to minimize the possibility of counterfeiting tokens via false proofs, there is at least one other concern related to the cryptocurrency as well. Zcash was created with a 20% "tax" levied on all blocks created over the first several years of the token. This tax is known as the "founder's tax," and it is used to compensate the developers of the cryptocurrency.

Critics have suggested that the founders could potentially use this facet of the system to create an infinite number of Zcash tokens without anyone else being aware of the existence of those tokens. For that reason, it's not entirely possible to know the exact number of Zcash tokens in existence at this point.

Since 2019, some developers have been working to improve zk-SNARKs by removing the trusted set up. A team called Suterusu has <a data-component="link" data-ordinal="1" data-source="inlineLink" data-type="externalLink" href="https://github.com/suterusu-team/Suter_yellowpaper" rel="noopener noreferrer">developed a system</a> called <a data-component="link" data-ordinal="2" data-source="inlineLink" data-type="externalLink" href="https://medium.com/suterusu/an-introduction-to-suterusu-1e10a64e99b8" rel="noopener noreferrer">zK-ConSNARK</a> that claims to be operable without a trusted set up, can provide privacy protection for mainstream blockchains like Bitcoin, and has the lowest inflation for any extant cryptocurrency.
""" ;
    invp:relates_to <https://www.investopedia.com/terms/b/bitcoin-private-btcp.asp>,
        <https://www.investopedia.com/terms/b/bitcoin.asp>,
        <https://www.investopedia.com/terms/b/blockchain.asp>,
        <https://www.investopedia.com/terms/o/onchain-governance.asp>,
        <https://www.investopedia.com/terms/v/verge-xvg-cryptocurrency.asp>,
        <https://www.investopedia.com/terms/z/zcash.asp> .

